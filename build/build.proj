<Project
  xmlns="http://schemas.microsoft.com/developer/msbuild/2003"
  DefaultTargets="Build"
  ToolsVersion="14.0">
  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), 'Common.props'))\Common.props" />

  <PropertyGroup>
    <TestsDirectory>$(RepositoryRootDirectory)bin\$(Configuration)\Tests\</TestsDirectory>

    <CommonMSBuildGlobalProperties>
      Configuration=$(Configuration);
    </CommonMSBuildGlobalProperties>
  </PropertyGroup>

  <ItemGroup>
    <VsManProjectFile Include="$(RepositoryRootDirectory)src\VsixV3\PreEmptive.Solutions.Dotfuscator.CE.vsmanproj" />

  </ItemGroup>
  <Target Name="RestorePackages">

    <Message Text="Restoring nuget packages" Importance="high" />

    <PropertyGroup>
        <__NewLine><![CDATA[
]]></__NewLine>
        <__SetNuget_Packages Condition="'$(OS)' == 'Windows_NT'">set NUGET_PACKAGES=$(NuGet_Packages)</__SetNuget_Packages>
        <__SetNuget_Packages Condition="'$(OS)' != 'Windows_NT'">export NUGET_PACKAGES=$(NuGet_Packages)</__SetNuget_Packages>
    </PropertyGroup>

    <Exec Command="$(__SetNuget_Packages)$(__NewLine)$(DotNetTool) nuget restore %(DirectoryToNugetRestore.Identity) --legacy-packages-directory --verbosity Minimal"
          WorkingDirectory="$(RepositoryRootDirectory)"
          />


    <!-- work around https://github.com/dotnet/sdk/issues/203 by passing in /p:SkipInvalidConfigurations=true /p:_InvalidConfigurationWarning=false -->
    <Exec Command="$(__SetNuget_Packages)$(__NewLine)$(DotNetTool) restore %(ProjectToDotnetRestore.Identity) /v:minimal /p:SkipInvalidConfigurations=true /p:_InvalidConfigurationWarning=false"
          Condition="'$(BuildTemplates)' != 'true'"
          WorkingDirectory="$(RepositoryRootDirectory)"
          />
  </Target>

  <Target Name="BuildSolution">

    <Message Text="Building %(SolutionFile.Filename) [$(Configuration)]" Importance="high" />

    <MSBuild BuildInParallel="true"
             Projects="@(SolutionFile)"
             Targets="Build"
             Properties="$(CommonMSBuildGlobalProperties)"
             />
  </Target>

  <Target Name="RebuildSolution">

    <Message Text="Rebuilding %(SolutionFile.Filename) [$(Configuration)]" Importance="high" />

    <MSBuild BuildInParallel="true"
             Projects="@(SolutionFile)"
             Targets="Rebuild"
             Properties="$(CommonMSBuildGlobalProperties)"
             />
  </Target>

  <Target Name="SignPackages">

    <MSBuild BuildInParallel="true"
             Projects="@(SigningProjectFile)"
             Targets="Build"
             Properties="$(CommonMSBuildGlobalProperties)"
             />
  </Target>

  <Target Name="BuildNuGetPackages" DependsOnTargets="SignPackages" Condition="'$(BuildTemplates)' != 'true'">

    <MSBuild BuildInParallel="true"
             Projects="@(NuGetProjectFile)"
             Targets="Build"
             Properties="$(CommonMSBuildGlobalProperties)"
             />

  </Target>

  <Target Name="RebuildNuGetPackages" DependsOnTargets="SignPackages" Condition="'$(BuildTemplates)' != 'true'">

    <MSBuild BuildInParallel="true"
             Projects="@(NuGetProjectFile)"
             Targets="Rebuild"
             Properties="$(CommonMSBuildGlobalProperties)"
             />

  </Target>

  <Target Name="BuildModernVsixPackages" DependsOnTargets="SignPackages" Condition="'$(BuildTemplates)' == 'true'">
    <MSBuild Projects="@(VsManProjectFile)"
             Targets="Build"
             Condition="'$(RunningInMicroBuild)' == 'true'"
             />
  </Target>

  <Target Name="RebuildModernVsixPackages" DependsOnTargets="SignPackages" Condition="'$(BuildTemplates)' == 'true'">

    <MSBuild Projects="@(VsManProjectFile)"
             Targets="Rebuild"
             Condition="'$(RunningInMicroBuild)' == 'true'"
             />
  </Target>

  <!-- Restore Sdks -->
  <Target Name="DeployMSBuildSdks" AfterTargets="BuildNuGetPackages;RebuildNuGetPackages">
    <ReadLinesFromFile File="$(RepositoryRootDirectory)TestAssets\buildVersion.txt">
      <Output TaskParameter="Lines" ItemName="SdkBuildVersion" />
    </ReadLinesFromFile>
    
    <PropertyGroup>
      <SdkBuildVersion>@(SdkBuildVersion)</SdkBuildVersion>
      <_RestoreSdkCommand>$(DotNetTool) restore</_RestoreSdkCommand>
      <_RestoreSdkCommand>$(_RestoreSdkCommand) $(RepositoryRootDirectory)\build\Sdk\SdkRestoreProject.proj</_RestoreSdkCommand>
      <_RestoreSdkCommand>$(_RestoreSdkCommand) /p:ExcludeRestorePackageImports=true</_RestoreSdkCommand>
      <_RestoreSdkCommand>$(_RestoreSdkCommand) --packages $(NuGet_Packages)</_RestoreSdkCommand>
    </PropertyGroup>
    
    <Exec Command="$(_RestoreSdkCommand)" />

    <ItemGroup>
      <SdkFile Include="$(PackagesLayoutDir)\**\*.*">
        <SdkDir>Microsoft.NET.Sdk</SdkDir>
      </SdkFile>
      <SdkFile Include="$(NuGet_Packages)\nuget.build.tasks.pack\$(NuGetVersion)\**\*.*">
        <SdkDir>NuGet.Build.Tasks.Pack</SdkDir>
      </SdkFile>
    </ItemGroup>

    <Copy SourceFiles="@(SdkFile)"
          DestinationFiles="$(RepositoryRootDirectory)bin\$(Configuration)\Sdks\%(SdkFile.SdkDir)\%(SdkFile.RecursiveDir)\%(SdkFile.Filename)%(SdkFile.Extension)" />
    
  </Target>

  <Target Name="Test" Condition="'$(BuildTemplates)' != 'true'">

    <ItemGroup>
      <TestAssembly Include="$(TestsDirectory)*Tests.dll" />
      <XmlTestFile Include="$(TestsDirectory)TestResults.xml" />
    </ItemGroup>

    <ItemGroup>
      <NetCoreAppProductAssets Include="$(PackagesLayoutToolsNetCoreAppDir)\*" />
    </ItemGroup>

    <Message Text="Running tests for %(SolutionFile.Filename) [$(Configuration)]" Importance="high" />

    <!-- Copy all the 'netcore1.0' product assemblies to the test directory, so the tests can load them. -->
    <Copy SourceFiles="@(NetCoreAppProductAssets)"
          DestinationFolder="$(TestsDirectory)"
          />

    <Exec Command="$(DotNetTool) &quot;$(TestsDirectory)\xunit.console.netcore.exe&quot; &quot;@(TestAssembly, '&quot; &quot;')&quot; -xml &quot;@(XmlTestFile)&quot;"
          LogStandardErrorAsError="true"
          WorkingDirectory="$(TestsDirectory)"
          IgnoreExitCode="true"
          >
      <Output TaskParameter="ExitCode" PropertyName="ExitCode" />
    </Exec>

    <Error Text="There were test failures, for full log see %(XmlTestFile.FullPath)" Condition="$(ExitCode) != 0" />

  </Target>

  <Target Name="BuildWithoutTesting" DependsOnTargets="BuildModernVsixPackages" />
  <Target Name="RebuildWithoutTesting" DependsOnTargets="RebuildModernVsixPackages" />

  <Target Name="Build" DependsOnTargets="BuildWithoutTesting;Test" />
  <Target Name="Rebuild" DependsOnTargets="RebuildWithoutTesting;Test" />
</Project>
